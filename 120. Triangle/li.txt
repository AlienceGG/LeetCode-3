idea1:
solution遍历了所有triangle，然而一种可能优化的算法是只对当前最小的路径，进行深度探索。
说可能的优化，是因为原方法的复杂度是固定不变的。优化的算法虽然节省了需要遍历的空间，但是在便利的顺序排序上会有性能消耗。
在整个triangle最佳路线比较明显，差异性大的时候，优化方法好。在最佳路线不明确，多种线路的探索是不可避免的情况下，老老实实的全部遍历，性能更好。
所以具体的结论需要看需求。

idea2:
此题要求只能向下走，然而实际可能有情况允许左右移动，甚至上下移动。这个情况下可以把triangle想象成graphe，利用最短路径树的算法。
最短路径树的算法，会在比较方面消耗很多性能。
